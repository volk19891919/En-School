/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  var calcNav = document.querySelector('.calc-nav');
  calcNav.addEventListener('click', function (e) {
    var btns = document.querySelectorAll('.calc-btn');
    var target = e.target;
    var targetLoc = target.dataset.loc;
    var targetNative = target.dataset["native"];
    var locCalc = document.querySelector('.loc-calc');
    var nativeCalc = document.querySelector('.native-calc');
    Array.from(btns).forEach(function (btn) {
      btn.classList.remove('active');
    });
    target.classList.add('active');
    locCalc.innerHTML = targetLoc;
    nativeCalc.innerHTML = targetNative;
  });
  var car4 = new Swiper('.car-4', {
    loop: false,
    navigation: {
      nextEl: '.car-4-next',
      prevEl: '.car-4-prev'
    },
    spaceBetween: 0,
    breakpoints: {
      320: {
        slidesPerView: 1.2
      },
      768: {
        slidesPerView: 2.2
      },
      993: {
        slidesPerView: 3
      },
      1200: {
        slidesPerView: 4
      }
    }
  });
  var car2 = new Swiper('.car-2', {
    loop: false,
    navigation: {
      nextEl: '.car-2-next',
      prevEl: '.car-2-prev'
    },
    spaceBetween: 0,
    breakpoints: {
      320: {
        slidesPerView: 1.2
      },
      993: {
        slidesPerView: 2
      }
    }
  });
  var car6 = new Swiper('.car-6', {
    loop: false,
    navigation: {
      nextEl: '.car-6-next',
      prevEl: '.car-6-prev'
    },
    spaceBetween: 0,
    breakpoints: {
      320: {
        slidesPerView: 2.4
      },
      578: {
        slidesPerView: 3.4
      },
      768: {
        slidesPerView: 3.2
      },
      993: {
        slidesPerView: 6
      }
    }
  });
  var modalBtns = document.querySelectorAll('.modal-btn');
  var modalCloseBtns = document.querySelectorAll('.modal-close');
  var body = document.querySelector('body');
  var _iterator = _createForOfIteratorHelper(modalBtns),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var modalBtn = _step.value;
      modalBtn.addEventListener('click', function () {
        body.classList.add('bodi-modal-active');
      });
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = _createForOfIteratorHelper(modalCloseBtns),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var modalCloseBtn = _step2.value;
      modalCloseBtn.addEventListener('click', function () {
        body.classList.remove('bodi-modal-active');
      });
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
});
/******/ })()
;